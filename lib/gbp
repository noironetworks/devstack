# lib/gbp
# functions - functions specific to group-based-policy

# Dependencies:
# ``functions`` file
# ``DEST`` must be defined
# ``STACK_USER`` must be defined

# ``stack.sh`` calls the entry points in this order:
#
# - install_gbpservice
# - install_gbpclient
# - init_gbpservice
#
# ``unstack.sh`` calls the entry points in this order:

GBPSERVICE_DIR=$DEST/gbpservice
GBPCLIENT_DIR=$DEST/python-gbpclient
GBPAPICAPI_DIR=$DEST/apicapi
GBPAPICML2_DIR=$DEST/apic-ml2-driver
GBPOPFLEX_DIR=$DEST/python-opflex-agent
GBPHEAT_DIR=$DEST/gbpautomation
GBPUI_DIR=$DEST/gbpui
NEUTRON_DIR=$DEST/neutron
NEUTRON_CONF_DIR=/etc/neutron
NEUTRON_CONF=$NEUTRON_CONF_DIR/neutron.conf
NETWORKING_CISCO_DIR=$DEST/networking-cisco
NETWORKING_CISCO_CONF_DIR=/etc/networking-cisco
NETWORKING_CISCO_CONF=$NEUTRON_CONF_DIR/networking-cisco.conf

# Save trace setting
XTRACE=$(set +o | grep xtrace)
set +o xtrace


# Functions
# ---------

# init_gbpservice() - Initialize databases, etc.
function init_gbpservice {
    # Run GBP db migrations
    gbp-db-manage --config-file $NEUTRON_CONF --config-file /$Q_PLUGIN_CONF_FILE upgrade head
}

# install_gbpservice() - Collect source and prepare
function install_gbpservice {
    git_clone $GBPSERVICE_REPO $GBPSERVICE_DIR $GBPSERVICE_BRANCH
    pip_install -e $GBPSERVICE_DIR
}

# install_gbpclient() - Collect source and prepare
function install_gbpclient {
    git_clone $GBPCLIENT_REPO $GBPCLIENT_DIR $GBPCLIENT_BRANCH
    pip_install -e $GBPCLIENT_DIR
    sudo install -D -m 0644 -o $STACK_USER {$GBPCLIENT_DIR/tools/,/etc/bash_completion.d/}gbp.bash_completion
}

# install_gbpclient() - Collect source and prepare
function install_gbpheat {
    git_clone $GBPHEAT_REPO $GBPHEAT_DIR $GBPHEAT_BRANCH
    pip_install -e $GBPHEAT_DIR
}

# install_gbpui() - Collect source and prepare
function install_gbpui {
    git_clone $GBPUI_REPO $GBPUI_DIR $GBPUI_BRANCH
    setup_develop $GBPUI_DIR
    ln -sf $GBPUI_DIR/gbpui/_*project*.py $HORIZON_DIR/openstack_dashboard/enabled
}

# install_gbpapicapi() - Collect source and prepare
function install_gbpapicapi {
    git_clone $GBPAPICAPI_REPO $GBPAPICAPI_DIR $GBPAPICAPI_BRANCH
    pip_install -e $GBPAPICAPI_DIR
}

# init_apicml2service() - Initialize databases, etc.
function init_apicml2service {
    # Run apic-ml2-driver db migrations
    apic-ml2-db-manage --config-file $NEUTRON_CONF --config-file /$Q_PLUGIN_CONF_FILE upgrade head
}

# install_gbpapicml2() - Collect source and prepare
function install_gbpapicml2 {
    git_clone $GBPAPICML2_REPO $GBPAPICML2_DIR $GBPAPICML2_BRANCH
    pip_install -e $GBPAPICML2_DIR
    if [ ! -e $NEUTRON_DIR/neutron/plugins/ml2/drivers/cisco/apic.orig ]; then
        mv $NEUTRON_DIR/neutron/plugins/ml2/drivers/cisco/apic $NEUTRON_DIR/neutron/plugins/ml2/drivers/cisco/apic.orig
        ln -sf $GBPAPICML2_DIR/apic_ml2/neutron/plugins/ml2/drivers/cisco/apic $NEUTRON_DIR/neutron/plugins/ml2/drivers/cisco/apic
        ln -sf $NEUTRON_DIR/neutron/plugins/ml2/drivers/cisco/apic.orig/apic_model.py $NEUTRON_DIR/neutron/plugins/ml2/drivers/cisco/apic/apic_model.py
    fi
}

# install_opflex() - Collect source and prepare
function install_gbpopflex {
    git_clone $GBPOPFLEX_REPO $GBPOPFLEX_DIR $GBPOPFLEX_BRANCH
    pip_install -e $GBPOPFLEX_DIR
}

# install_networking_cisco() - Collect source and prepare
function install_networking_cisco {
    git_clone $NETWORKING_CISCO_REPO $NETWORKING_CISCO_DIR $NETWORKING_CISCO_BRANCH
    pip_install -e $NETWORKING_CISCO_DIR
}

# init_networking_cisco() - Initialize databases, etc.
function init_networking_cisco {
    # Run GBP db migrations
    networking-cisco-db-manage --config-file $NEUTRON_CONF --config-file /$Q_PLUGIN_CONF_FILE upgrade head
}


# Restore xtrace
$XTRACE

# Tell emacs to use shell-script-mode
## Local variables:
## mode: shell-script
## End:
