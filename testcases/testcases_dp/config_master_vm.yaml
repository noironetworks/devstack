#!highlight yaml

heat_template_version: 2013-05-23

parameters:
    vm_image:
      type: string
      label: vm_image
      description: Image for all VMs
      default: ubuntu_multi_nics

    vm_flavor:
      type: string
      label: vm_flavor
      description: Flavor for all VMs
      default: m1.medium

    availability_zone:
      type: string
      label: availability_zone
      description: The Availability Zone to Launch Instance
      default: 'gbp_zone'

resources:
# Creating allow action
    demo_act:
        type: OS::Neutron::PolicyAction
        properties:
            name: demo_act
            action_type: allow
            shared: False

    demo_act_dup:
        type: OS::Neutron::PolicyAction
        properties:
            name: demo_act_dup
            action_type: allow
            shared: False


# Creating a classifier,policy-rule,policy-ruleset(Contract) for ICMP traffic
    demo_class_icmp:
        type: OS::Neutron::PolicyClassifier
        properties:
            name: demo_class_icmp
            protocol: icmp
            direction: bi
            shared: False

    demo_rule_icmp:
        type: OS::Neutron::PolicyRule
        properties:
            name: demo_rule_icmp
            policy_classifier_id: { get_resource: demo_class_icmp }
            policy_actions: [{ get_resource: demo_act }]
            shared: False

    demo_ruleset_icmp:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_icmp
            policy_rules: [{ get_resource: demo_rule_icmp }]
            child_policy_rule_sets: []
            shared: False

# Creating a classifier,policy-rule,policy-ruleset(Contract) for any tcp traffic
    demo_class_tcp:
        type: OS::Neutron::PolicyClassifier
        properties:
            name: demo_class_tcp
            protocol: tcp
            direction: bi
            shared: False

    demo_rule_tcp:
        type: OS::Neutron::PolicyRule
        properties:
            name: demo_rule_tcp
            policy_classifier_id: { get_resource: demo_class_tcp }
            policy_actions: [{ get_resource: demo_act }]
            shared: False

    demo_ruleset_tcp:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_tcp
            policy_rules: [{ get_resource: demo_rule_tcp }]
            child_policy_rule_sets: []
            shared: False

# Creating a classifier,policy-rule,policy-ruleset(Contract) for any udp traffic
    demo_class_udp:
        type: OS::Neutron::PolicyClassifier
        properties:
            name: demo_class_udp
            protocol: udp
            direction: bi
            shared: False

    demo_rule_udp:
        type: OS::Neutron::PolicyRule
        properties:
            name: demo_rule_udp
            policy_classifier_id: { get_resource: demo_class_udp }
            policy_actions: [{ get_resource: demo_act }]
            shared: False

    demo_ruleset_udp:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_udp
            policy_rules: [{ get_resource: demo_rule_udp }]
            child_policy_rule_sets: []
            shared: False

# Creating Policy-RuleSet with proto ICMP & TCP

    demo_ruleset_icmp_tcp:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_icmp_tcp
            policy_rules: [{ get_resource: demo_rule_icmp }, { get_resource: demo_rule_tcp }]
            child_policy_rule_sets: []
            shared: False

# Creating Policy-RuleSet with proto ICMP & UDP

    demo_ruleset_icmp_udp:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_icmp_udp
            policy_rules: [{ get_resource: demo_rule_icmp },{ get_resource: demo_rule_udp }]
            child_policy_rule_sets: []
            shared: False

# Creating Policy-RuleSet with proto TCP & UDP

    demo_ruleset_tcp_udp:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_tcp_udp
            policy_rules: [{ get_resource: demo_rule_tcp }, { get_resource: demo_rule_udp }]
            child_policy_rule_sets: []
            shared: False

# Creating a policy-ruleset(Contract) for allow all protocol(ICMP,TCP,UDP)

    demo_ruleset_all:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_all
            policy_rules: [{ get_resource: demo_rule_icmp }, { get_resource: demo_rule_tcp }, { get_resource: demo_rule_udp }]
            child_policy_rule_sets: []
            shared: False

# Creating a policy-ruleset with no rule

    demo_ruleset_norule:
        type: OS::Neutron::PolicyRuleSet
        properties:
            name: demo_ruleset_norule
            policy_rules: []
            child_policy_rule_sets: []
            shared: False

# Creating L3Policy,L2Policy and PTG and PTs for header SamePTG_SameL2P_SameL3P
    demo_same_ptg_l2p_l3p_l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: demo_same_ptg_l2p_l3p_l3p
            ip_pool: "5.5.5.0/24"
            subnet_prefix_length: 28
            shared: False

    demo_same_ptg_l2p_l3p_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: demo_same_ptg_l2p_l3p_l3_policy
        properties:
            name: demo_same_ptg_l2p_l3p_bd
            l3_policy_id: { get_resource: demo_same_ptg_l2p_l3p_l3_policy }
            shared: False

    demo_same_ptg_l2p_l3p_ptg:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: demo_same_ptg_l2p_l3p_ptg
            l2_policy_id: {get_resource: demo_same_ptg_l2p_l3p_l2_policy}
            shared: False


    vm1_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_same_ptg_l2p_l3p_ptg
        properties:
            name: vm1_data_pt
            description: 'VM1 Data PT'
            policy_target_group_id: { get_resource: demo_same_ptg_l2p_l3p_ptg }

    vm2_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_same_ptg_l2p_l3p_ptg
        properties:
            name: vm2_data_pt
            description: 'VM2 Data PT'
            policy_target_group_id: { get_resource: demo_same_ptg_l2p_l3p_ptg }

    vm3_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_same_ptg_l2p_l3p_ptg
        properties:
            name: vm3_data_pt
            description: 'VM3 Data PT'
            policy_target_group_id: { get_resource: demo_same_ptg_l2p_l3p_ptg }

# Creating L3Policy,L2Policy and PTG and PTs for header DiffPTG_SameL2P_SameL3P
    demo_diff_ptg_same_l2p_l3p_l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: demo_diff_ptg_same_l2p_l3p_l3p
            ip_pool: "6.6.6.0/24"
            subnet_prefix_length: 28
            shared: False

    demo_diff_ptg_same_l2p_l3p_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: demo_diff_ptg_same_l2p_l3p_l3_policy
        properties:
            name: demo_diff_ptg_same_l2p_l3p_bd
            l3_policy_id: { get_resource: demo_diff_ptg_same_l2p_l3p_l3_policy }
            shared: False

    demo_diff_ptg_same_l2p_l3p_ptg1:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: demo_diff_ptg_same_l2p_l3p_ptg1
            l2_policy_id: {get_resource: demo_diff_ptg_same_l2p_l3p_l2_policy}
            shared: False

    demo_diff_ptg_same_l2p_l3p_ptg2:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: demo_diff_ptg_same_l2p_l3p_ptg2
            l2_policy_id: {get_resource: demo_diff_ptg_same_l2p_l3p_l2_policy}
            shared: False

    vm4_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_diff_ptg_same_l2p_l3p_ptg1
        properties:
            name: vm4_data_pt
            description: 'VM4 Data PT'
            policy_target_group_id: { get_resource: demo_diff_ptg_same_l2p_l3p_ptg1 }

    vm5_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_diff_ptg_same_l2p_l3p_ptg2
        properties:
            name: vm5_data_pt
            description: 'VM5 Data PT'
            policy_target_group_id: { get_resource: demo_diff_ptg_same_l2p_l3p_ptg2}

    vm6_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_diff_ptg_same_l2p_l3p_ptg2
        properties:
            name: vm6_data_pt
            description: 'VM6 Data PT'
            policy_target_group_id: { get_resource: demo_diff_ptg_same_l2p_l3p_ptg2 }


# Creating L3Policy,L2Policy and PTG and PTs for header DiffPTG_DiffL2P_SameL3P
    demo_diff_ptg_l2p_same_l3p_l3_policy:
        type: OS::Neutron::L3Policy
        properties:
            name: demo_diff_ptg_l2p_same_l3p_l3p
            ip_pool: "7.7.7.0/24"
            subnet_prefix_length: 28
            shared: False

    demo_diff_ptg_l2p_same_l3p_l2_policy:
        type: OS::Neutron::L2Policy
        depends_on: demo_diff_ptg_l2p_same_l3p_l3_policy
        properties:
            name: demo_diff_ptg_l2p_same_l3p_bd
            l3_policy_id: { get_resource: demo_diff_ptg_l2p_same_l3p_l3_policy }
            shared: False

    demo_diff_ptg_l2p_same_l3p_ptg1:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: demo_diff_ptg_l2p_same_l3p_ptg1
            l2_policy_id: {get_resource: demo_diff_ptg_l2p_same_l3p_l2_policy}
            shared: False

    demo_diff_ptg_l2p_same_l3p_ptg2:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: demo_diff_ptg_l2p_same_l3p_ptg2
            l2_policy_id: {get_resource: demo_diff_ptg_l2p_same_l3p_l2_policy}
            shared: False

    vm7_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_diff_ptg_l2p_same_l3p_ptg1
        properties:
            name: vm7_data_pt
            description: 'VM7 Data PT'
            policy_target_group_id: { get_resource: demo_diff_ptg_l2p_same_l3p_ptg1 }

    vm8_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_diff_ptg_l2p_same_l3p_ptg2
        properties:
            name: vm8_data_pt
            description: 'VM8 Data PT'
            policy_target_group_id: { get_resource: demo_diff_ptg_l2p_same_l3p_ptg2 }

    vm9_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_diff_ptg_l2p_same_l3p_ptg2
        properties:
            name: vm9_data_pt
            description: 'VM9 Data PT'
            policy_target_group_id: { get_resource: demo_diff_ptg_l2p_same_l3p_ptg2 }


# Creating L3Policy,L2Policy and PTG and PTs for header DiffPTG_DiffL2P_DiffL3P
    demo_l3policy_1:
        type: OS::Neutron::L3Policy
        properties:
            name: demo_subnet_1
            ip_pool: "30.30.30.0/24"
            subnet_prefix_length: 28
            shared: False

    demo_l3policy_2:
        type: OS::Neutron::L3Policy
        properties:
            name: demo_subnet_2
            ip_pool: "40.40.40.0/24"
            subnet_prefix_length: 28
            shared: False

    demo_l2_policy_1:
        type: OS::Neutron::L2Policy
        depends_on: demo_l3policy_1
        properties:
            name: demo_srvr_bd
            l3_policy_id: { get_resource: demo_l3policy_1 }
            shared: False

    demo_l2_policy_2:
        type: OS::Neutron::L2Policy
        depends_on: demo_l3policy_2
        properties:
            name: demo_clnt_bd
            l3_policy_id: { get_resource: demo_l3policy_2 }
            shared: False

    demo_diff_ptg_l2p_l3p_ptg1:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: demo_diff_ptg_l2p_l3p_ptg1
            l2_policy_id: {get_resource: demo_l2_policy_1}
            shared: False

    demo_diff_ptg_l2p_l3p_ptg2:
        type: OS::Neutron::PolicyTargetGroup
        properties:
            name: demo_diff_ptg_l2p_l3p_ptg2
            l2_policy_id: {get_resource: demo_l2_policy_2}
            shared: False

    vm10_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_diff_ptg_l2p_l3p_ptg1
        properties:
            name: vm10_data_pt
            description: 'VM10 Data PT'
            policy_target_group_id: { get_resource: demo_diff_ptg_l2p_l3p_ptg1 }

    vm11_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_diff_ptg_l2p_l3p_ptg2
        properties:
            name: vm11_data_pt
            description: 'VM11 Data PT'
            policy_target_group_id: { get_resource: demo_diff_ptg_l2p_l3p_ptg2 }

    vm12_data_pt:
        type: OS::Neutron::PolicyTarget
        depends_on: demo_diff_ptg_l2p_l3p_ptg2
        properties:
            name: vm12_data_pt
            description: 'VM12 Data PT'
            policy_target_group_id: { get_resource: demo_diff_ptg_l2p_l3p_ptg2 }


# <<< PLEASE NOTE: DO NOT CHANGE THE Name of VMs, as they have been referred in testcases >>>
# Instantiating VM for Same_PTG_Same_L2P_Same_L3P
    vm1:
        type: OS::Nova::Server
        depends_on: vm1_data_pt
        properties:
            name: "VM1"
            availability_zone: { get_param: availability_zone }
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm1_data_pt, port_id]}
            user_data_format: RAW

    vm2:
        type: OS::Nova::Server
        depends_on: vm1_data_pt
        properties:
            name: "VM2"
            availability_zone: { get_param: availability_zone }
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm2_data_pt, port_id]}
            user_data_format: RAW

    vm3:
        type: OS::Nova::Server
        depends_on: vm3_data_pt
        properties:
            name: "VM3"
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm3_data_pt, port_id]}
            user_data_format: RAW

# Instantiating VM for DIff_PTG_Same_L2P_Same_L3P
    vm4:
        type: OS::Nova::Server
        depends_on: vm4_data_pt
        properties:
            name: "VM4"
            availability_zone: { get_param: availability_zone }
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm4_data_pt, port_id]}
            user_data_format: RAW

    vm5:
        type: OS::Nova::Server
        depends_on: vm5_data_pt
        properties:
            name: "VM5"
            availability_zone: { get_param: availability_zone }
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm5_data_pt, port_id]}
            user_data_format: RAW

    vm6:
        type: OS::Nova::Server
        depends_on: vm6_data_pt
        properties:
            name: "VM6"
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm6_data_pt, port_id]}
            user_data_format: RAW

# Instantiating VM for Diff_PTG_Diff_L2P_Same_L3P
    vm7:
        type: OS::Nova::Server
        depends_on: vm7_data_pt
        properties:
            name: "VM7"
            availability_zone: { get_param: availability_zone }
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm7_data_pt, port_id]}
            user_data_format: RAW

    vm8:
        type: OS::Nova::Server
        depends_on: vm8_data_pt
        properties:
            name: "VM8"
            availability_zone: { get_param: availability_zone }
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm8_data_pt, port_id]}
            user_data_format: RAW

    vm9:
        type: OS::Nova::Server
        depends_on: vm9_data_pt
        properties:
            name: "VM9"
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm9_data_pt, port_id]}
            user_data_format: RAW

# Instantiating VM for Diff_PTG_Diff_L2P_Diff_L3P
    vm10:
        type: OS::Nova::Server
        depends_on: vm10_data_pt
        properties:
            name: "VM10"
            availability_zone: { get_param: availability_zone }
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm10_data_pt, port_id]}
            user_data_format: RAW

    vm11:
        type: OS::Nova::Server
        depends_on: vm11_data_pt
        properties:
            name: "VM11"
            availability_zone: { get_param: availability_zone }
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm11_data_pt, port_id]}
            user_data_format: RAW

    vm12:
        type: OS::Nova::Server
        depends_on: vm12_data_pt
        properties:
            name: "VM12"
            image: { get_param: vm_image }
            flavor: {get_param: vm_flavor}
            networks:
                - port: {get_attr: [vm12_data_pt, port_id]}
            user_data_format: RAW

outputs:

    demo_ruleset_tcp_id:
        value: { get_resource: demo_ruleset_tcp }

    demo_rule_tcp_id:
        value: { get_resource: demo_rule_tcp }

    demo_ruleset_udp_id:
        value: { get_resource: demo_ruleset_udp }

    demo_rule_udp_id:
        value: { get_resource: demo_rule_udp }

    demo_ruleset_icmp_id:
        value: { get_resource: demo_ruleset_icmp }

    demo_rule_icmp_id:
        value: { get_resource: demo_rule_icmp }

    demo_ruleset_icmp_tcp_id:
        value: { get_resource: demo_ruleset_icmp_tcp }

    demo_ruleset_icmp_udp_id:
        value: { get_resource: demo_ruleset_icmp_udp }

    demo_ruleset_tcp_udp_id:
        value: { get_resource: demo_ruleset_tcp_udp }

    demo_ruleset_all_id:
        value: { get_resource: demo_ruleset_all }

    demo_ruleset_norule_id:
        value: { get_resource: demo_ruleset_norule }

    demo_same_ptg_l2p_l3p_ptg_id:
        value: { get_resource: demo_same_ptg_l2p_l3p_ptg }

    demo_diff_ptg_same_l2p_l3p_ptg1_id:
        value: { get_resource: demo_diff_ptg_same_l2p_l3p_ptg1 }

    demo_diff_ptg_same_l2p_l3p_ptg2_id:
        value: { get_resource: demo_diff_ptg_same_l2p_l3p_ptg2 }

    demo_diff_ptg_l2p_same_l3p_ptg1_id:
        value: { get_resource: demo_diff_ptg_l2p_same_l3p_ptg1 }

    demo_diff_ptg_l2p_same_l3p_ptg2_id:
        value: { get_resource: demo_diff_ptg_l2p_same_l3p_ptg2 }

    demo_diff_ptg_l2p_l3p_ptg1_id:
        value: { get_resource: demo_diff_ptg_l2p_l3p_ptg1 }

    demo_diff_ptg_l2p_l3p_ptg2_id:
        value: { get_resource: demo_diff_ptg_l2p_l3p_ptg2 }

    instance_ip:
        value: { get_attr: [vm1, first_address] }

